{"name": "test_registration[data11]", "status": "broken", "statusDetails": {"message": "AttributeError: 'list' object has no attribute 'values'", "trace": "data = {'confirmEmail': 'user@example.com', 'description': 'Password Masking', 'email': 'user@example.com', 'expected_message': 'Password is masked', ...}\n\n    @pytest.mark.parametrize(\"data\", test_data)\n    def test_registration(data):\n        payload = {\n            \"email\": data[\"email\"],\n            \"confirmEmail\": data[\"confirmEmail\"],\n            \"password\": data[\"password\"]\n        }\n        response = post_request(\"https://abc13514.sg-host.com/api.php\", payload)\n    \n        # Assert status code\n        assert response.status_code == data[\"expected_status\"], (\n            f\"Test '{data['description']}' failed: Expected status {data['expected_status']}, got {response.status_code}. Response: {response.text}\"\n        )\n    \n        # Assert expected message if present\n        if \"expected_message\" in data:\n            resp_json = response.json()\n            assert data[\"expected_message\"] in resp_json.get(\"message\", \"\") or \\\n>                  any(data[\"expected_message\"] in err for err in resp_json.get(\"errors\", {}).values()), (\n                f\"Test '{data['description']}' failed: Expected message '{data['expected_message']}', got '{resp_json.get('message', '')}'.\"\n            )\nE           AttributeError: 'list' object has no attribute 'values'\n\ntest_registration_data_driven.py:25: AttributeError"}, "parameters": [{"name": "data", "value": "{'description': 'Password Masking', 'email': 'user@example.com', 'confirmEmail': 'user@example.com', 'password': 'Password123', 'expected_status': 200, 'expected_message': 'Password is masked'}"}], "start": 1747419942435, "stop": 1747419943471, "uuid": "8b259f5e-ef4a-4ddf-aceb-a194af5dfad6", "historyId": "f41b809024bd54e69231f011b339fba3", "testCaseId": "42441ed84a770fed2606b456e39d939f", "fullName": "test_registration_data_driven#test_registration", "labels": [{"name": "suite", "value": "test_registration_data_driven"}, {"name": "host", "value": "codespaces-8e7423"}, {"name": "thread", "value": "36641-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_registration_data_driven"}]}